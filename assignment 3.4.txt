			ASSIGNMENT 3.4

1)  Explain HDFS federation and High availability

HDFS FEDERATION :
                  * HDFS Federation improves the existing HDFS architecture through a clear separation of namespace and storage, enabling generic
                     block storage layer. It enables support for multiple namespaces in the cluster to improve scalability and isolation.
	*  Federation also opens up the architecture, expanding the applicability of HDFS cluster to new implementations and use cases.
	* A Block Pool is a set of blocks that belong to a single namespace.
	2 MAIN LAYERS--
	(i)Namespace : It manages directories, files and blocks. It supports file system operations such as creation, modification, deletion 
	(ii)Block Storage : * Block Management maintains the membership of datanodes in the cluster.
                                                    It supports block-related operations such as creation, deletion, modification and getting location of the blocks. 
                                                 * Physical Storage stores the blocks and provides read/write access to it.



HIGH AVAILABILITY : 
	* Before Hadoop 2 comes to the picture, Hadoop clusters were living with the fact that Name Node has placed limits on the degree
                     to which they could scale. Some of the clusters were able to scale beyond 3,000 or 4,000 nodes. 
	* NameNode’s require to maintain records for each block of data stored in the cluster turned out to be the most significant factor limiting
                     the greater cluster growth.

	2 NAMENODES --1) An Active NameNode 
		             2) A Standby NameNode  
 	 (i) Active namenode : It is required being on a dedicated master node that’s configured very similar to the master node used 
                                                        by the Active NameNode.
	(ii) Standby namenode: * The Standby NameNode’s work is not be sitting idly while the NameNode manages all the block address
                                                            requests.
                                                           * The Standby NameNode, charged with the job of keeping the state of the block locations and block metadata 
                                                            in memory, managing the HDFS check-pointing duties. 


2) How HDFS handles failures while writing data:
    Handling Failures During Writing a File
              *The pipeline is closed and any packets in the ackqueue are added to the front of the data queue
              *The current block on the good DataNodes is given a new identity, which is communicated to the NameNode
              *The failed DataNode is removed from the pipeline, and a new pipeline is constructed from the two good DataNodes
              *The remainder of the block’s data is written to the good DataNodes in the pipeline 
              *The NameNode notices that the block is under-replicated, and it arranges for a further replica to be created on another node
              *As long as dfs.namenode.replication.min replicas (which defaults to 1) are written, the write will succeed
              *The block will be asynchronously replicated across the cluster until its target replication factor is reached (dfs.replication, which defaults to 3)